name: Build Statically Linked Luanti for Raspberry Pi 5 (aarch64)

on:
  workflow_dispatch: # Allows manual triggering from the GitHub Actions tab

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive # Luanti requires submodules like IrrlichtMt

    - name: Setup QEMU for arm64 (optional for cross-compilation)
      uses: docker/setup-qemu-action@v3
      with:
        platforms: linux/arm64

    - name: Add arm64 architecture and update repositories
      run: |
        sudo dpkg --add-architecture arm64
        sudo apt-get update

    - name: Install cross-compilation tools and dependencies
      run: |
        sudo apt-get install -y \
          gcc-aarch64-linux-gnu \
          g++-aarch64-linux-gnu \
          binutils-aarch64-linux-gnu \
          cmake \
          make \
          pkg-config \
          crossbuild-essential-arm64 \
          libbz2-dev:arm64 \
          libpng-dev:arm64 \
          libjpeg-turbo8-dev:arm64 \
          libsqlite3-dev:arm64 \
          libogg-dev:arm64 \
          libvorbis-dev:arm64 \
          libopenal-dev:arm64 \
          libcurl4-openssl-dev:arm64

    - name: Install cross-compilation tools and dependencies
      run: |
        sudo apt-get install -y \
          libfreetype6-dev:arm64 \
          zlib1g-dev:arm64 \
          libgmp-dev:arm64 \
          libjsoncpp-dev:arm64 \
          libzstd-dev:arm64 \
          gettext:arm64 \
          libgles2-mesa-dev:arm64 \
          libegl1-mesa-dev:arm64 \
          libx11-dev:arm64 \
          libxxf86vm-dev:arm64 \
          libxi-dev:arm64 \
          libncurses5-dev:arm64

    - name: Install LuaJIT from source for arm64
      run: |
        git clone https://github.com/LuaJIT/LuaJIT.git
        cd LuaJIT
        export CC=aarch64-linux-gnu-gcc
        make -j$(nproc) TARGET_SYS=Linux CROSS=aarch64-linux-gnu- BUILDMODE=static
        sudo make install PREFIX=/usr/aarch64-linux-gnu
        cd ..

    - name: Create CMake toolchain file for aarch64
      run: |
        cat > aarch64-toolchain.cmake << 'EOF'
        set(CMAKE_SYSTEM_NAME Linux)
        set(CMAKE_SYSTEM_PROCESSOR aarch64)
        set(CMAKE_C_COMPILER aarch64-linux-gnu-gcc)
        set(CMAKE_CXX_COMPILER aarch64-linux-gnu-g++)
        set(CMAKE_FIND_ROOT_PATH /usr/aarch64-linux-gnu)
        set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
        set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
        set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
        set(CMAKE_LIBRARY_ARCHITECTURE aarch64-linux-gnu)
        EOF

    - name: Set up environment for cross-compilation
      run: |
        export PKG_CONFIG_PATH=/usr/lib/aarch64-linux-gnu/pkgconfig:/usr/aarch64-linux-gnu/lib/pkgconfig
        export PKG_CONFIG_SYSROOT_DIR=/usr/aarch64-linux-gnu
        export LDFLAGS="-static -Wl,--whole-archive -lpthread -Wl,--no-whole-archive"

    - name: Configure CMake with static linking
      run: |
        cmake . \
          -DCMAKE_TOOLCHAIN_FILE=aarch64-toolchain.cmake \
          -DCMAKE_BUILD_TYPE=Release \
          -DBUILD_CLIENT=ON \
          -DBUILD_SERVER=ON \
          -DRUN_IN_PLACE=FALSE \
          -DENABLE_GLES=ON \
          -DENABLE_SOUND=ON \
          -DENABLE_CURL=ON \
          -DENABLE_GETTEXT=ON \
          -DENABLE_FREETYPE=ON \
          -DUSE_LUAJIT=ON \
          -DENABLE_LEVELDB=OFF \
          -DENABLE_POSTGRESQL=OFF \
          -DENABLE_SPATIAL=OFF \
          -DENABLE_REDIS=OFF \
          -DCMAKE_C_FLAGS="-static" \
          -DCMAKE_CXX_FLAGS="-static" \
          -DCMAKE_EXE_LINKER_FLAGS="-static -Wl,--whole-archive -lpthread -Wl,--no-whole-archive" \
          -DLUA_INCLUDE_DIR=/usr/aarch64-linux-gnu/include/luajit-2.1 \
          -DLUA_LIBRARY=/usr/aarch64-linux-gnu/lib/libluajit-5.1.a

    - name: Build
      run: make -j$(nproc)

    - name: Verify binary architecture
      run: |
        file bin/luanti
        # Should output: ELF 64-bit LSB executable, ARM aarch64

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: luanti-rpi5-static-aarch64
        path: bin/luanti

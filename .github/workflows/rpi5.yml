name: Build Luanti for Raspberry Pi 5 (Static)

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: debian:bullseye

    steps:
    - name: Install build dependencies
      run: |
        apt-get update
        apt-get install -y --no-install-recommends \
          ca-certificates \
          g++-aarch64-linux-gnu \
          cmake \
          git \
          wget \
          build-essential \
          libx11-dev \
          libxxf86vm-dev \
          libgl1-mesa-dev \
          libglu1-mesa-dev

    - name: Checkout Luanti source
      uses: actions/checkout@v3
      with:
        path: luanti

    - name: Create directories for dependencies
      run: |
        mkdir -p deps/build deps/install

    - name: Build zlib
      run: |
        cd deps
        wget -4 https://www.zlib.net/zlib-1.3.1.tar.gz
        tar xf zlib-1.3.1.tar.gz
        cd zlib-1.3.1
        CHOST=aarch64-linux-gnu ./configure --static --prefix=$PWD/../../deps/install
        make
        make install

    - name: Build SQLite3
      run: |
        cd deps
        wget -4 https://www.sqlite.org/2023/sqlite-autoconf-3430200.tar.gz
        tar xf sqlite-autoconf-3430200.tar.gz
        cd sqlite-autoconf-3430200
        ./configure --host=aarch64-linux-gnu --disable-shared --enable-static --prefix=$PWD/../../deps/install
        make
        make install

    - name: Build LuaJIT
      run: |
        cd deps
        git clone https://luajit.org/git/luajit.git
        cd luajit
        make HOST_CC="gcc" CROSS="aarch64-linux-gnu-" BUILDMODE="static" install PREFIX=$PWD/../../deps/install
        
    - name: Build cURL
      run: |
        cd deps
        wget -4 https://curl.se/download/curl-8.4.0.tar.gz
        tar xf curl-8.4.0.tar.gz
        cd curl-8.4.0
        ./configure --host=aarch64-linux-gnu --disable-shared --enable-static --prefix=$PWD/../../deps/install \
          --with-zlib=$PWD/../../deps/install --without-ssl
        make
        make install

    - name: Build Freetype
      run: |
        cd deps
        wget -4 https://download.savannah.gnu.org/releases/freetype/freetype-2.13.2.tar.gz
        tar xf freetype-2.13.2.tar.gz
        cd freetype-2.13.2
        ./configure --host=aarch64-linux-gnu --disable-shared --enable-static --prefix=$PWD/../../deps/install --with-zlib=no
        make
        make install

    - name: Build OpenAL-Soft
      run: |
        cd deps
        git clone https://github.com/kcat/openal-soft.git
        cd openal-soft/build
        cmake .. -DCMAKE_TOOLCHAIN_FILE=$GITHUB_WORKSPACE/luanti/cmake/toolchains/aarch64-linux-gnu.cmake \
          -DCMAKE_INSTALL_PREFIX=$PWD/../../../deps/install \
          -DLIBTYPE=STATIC
        make
        make install
        
    - name: Build Ogg
      run: |
        cd deps
        wget -4 https://downloads.xiph.org/releases/ogg/libogg-1.3.5.tar.gz
        tar xf libogg-1.3.5.tar.gz
        cd libogg-1.3.5
        ./configure --host=aarch64-linux-gnu --disable-shared --enable-static --prefix=$PWD/../../deps/install
        make
        make install

    - name: Build libvorbis
      run: |
        cd deps
        wget -4 https://downloads.xiph.org/releases/vorbis/libvorbis-1.3.7.tar.gz
        tar xf libvorbis-1.3.7.tar.gz
        cd libvorbis-1.3.7
        ./configure --host=aarch64-linux-gnu --disable-shared --enable-static --prefix=$PWD/../../deps/install \
          --with-ogg=$PWD/../../deps/install
        make
        make install

    - name: Build GMP
      run: |
        cd deps
        wget -4 https://gmplib.org/download/gmp/gmp-6.3.0.tar.xz
        tar xf gmp-6.3.0.tar.xz
        cd gmp-6.3.0
        ./configure --host=aarch64-linux-gnu --disable-shared --enable-static --prefix=$PWD/../../deps/install
        make
        make install
        
    - name: Build json-c
      run: |
        cd deps
        git clone https://github.com/json-c/json-c.git
        cd json-c
        cmake . -DCMAKE_TOOLCHAIN_FILE=$GITHUB_WORKSPACE/luanti/cmake/toolchains/aarch64-linux-gnu.cmake \
          -DCMAKE_INSTALL_PREFIX=$PWD/../../deps/install \
          -DBUILD_SHARED_LIBS=OFF
        make
        make install
        
    - name: Build zstd
      run: |
        cd deps
        wget -4 https://github.com/facebook/zstd/releases/download/v1.5.5/zstd-1.5.5.tar.gz
        tar xf zstd-1.5.5.tar.gz
        cd zstd-1.5.5/build/cmake
        cmake . -DCMAKE_TOOLCHAIN_FILE=$GITHUB_WORKSPACE/luanti/cmake/toolchains/aarch64-linux-gnu.cmake \
          -DCMAKE_INSTALL_PREFIX=$PWD/../../../../deps/install \
          -DZSTD_BUILD_STATIC=ON -DZSTD_BUILD_SHARED=OFF
        make
        make install
        
    - name: Build IrrlichtMt
      run: |
        cd deps
        git clone https://github.com/minetest/irrlicht.git
        cd irrlicht/source/Irrlicht
        make NDEBUG=1 CROSS_COMPILE=aarch64-linux-gnu- sharedlib=0 -j$(nproc)
        cp -r ../../include/* $GITHUB_WORKSPACE/deps/install/include/
        cp ../../lib/Linux/libIrrlicht.a $GITHUB_WORKSPACE/deps/install/lib/

    - name: Build Luanti
      run: |
        cd luanti
        cmake . -B build \
          -DCMAKE_TOOLCHAIN_FILE=cmake/toolchains/aarch64-linux-gnu.cmake \
          -DENABLE_GETTEXT=OFF \
          -DENABLE_LUAJIT=ON \
          -DENABLE_SOUND=ON \
          -DENABLE_CURL=ON \
          -DENABLE_FREETYPE=ON \
          -DBUILD_SERVER=OFF \
          -DBUILD_CLIENT=ON \
          -DVERSION_EXTRA=RPI5-STATIC \
          -DCMAKE_PREFIX_PATH=$GITHUB_WORKSPACE/deps/install \
          -DCMAKE_EXE_LINKER_FLAGS="-static -static-libgcc -static-libstdc++" \
          -DIrrlicht_INCLUDE_DIR=$GITHUB_WORKSPACE/deps/install/include \
          -DIrrlicht_LIBRARY=$GITHUB_WORKSPACE/deps/install/lib/libIrrlicht.a
        cmake --build build -j$(nproc)

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: luanti-rpi5-static
        path: luanti/build/bin/luanti
